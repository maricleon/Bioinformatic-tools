#!/bin/bash

#SBATCH --cpus-per-task=16
#SBATCH --ntasks=8
#SBATCH --mem-per-cpu=5G
#SBATCH --time=16:00:00
#SBATCH --job-name=assembly
#SBATCH --nodelist=heracpu02.nlzoh.si

cd /home/storage/finished_projects/Leon/KP-CP/Unicycler/
outdir=/home/storage/finished_projects/Leon/KP-CP/Unicycler/
mkdir -p $outdir

echo "Starting Unicycler"

source /home/nlzoh.si/leomar1/.bashrc
source activate py10

# Loop through all R1 files to identify pairs and the filtered file based on prefix
for r1_file in *R1*.fastq.gz; do
	# Extract the prefix (e.g., "AN2-007") from the filename
	prefix=$(echo "$r1_file" | cut -d'_' -f1)
	
	# Define corresponding R2 and filtered files using the prefix
	r2_file="${r1_file/R1/R2}"
	filtered_file="${prefix}.filtered.fastq.gz"

	# Check if all necessary files exist before processing
	if [[ -f $r1_file && -f $r2_file && -f $filtered_file ]]; then
		while [ "$(jobs -p | wc -l)" -ge "$SLURM_NTASKS" ]; do
			sleep 30
		done

		# Run Unicycler with the identified files
		srun --ntasks=1 --cpus-per-task=16 unicycler -1 $r1_file -2 $r2_file -l $filtered_file --verbosity 2 --threads 8 -o ${prefix}_hybrid_assembly &
	else
		echo "Skipping $prefix: corresponding R2 or filtered file not found."
	fi
done
wait

#the script has been updated. Now you dont have to rename files, because this script recognize R1 and R2 files and ont file that contains "filtered". Be aware of that.


#now we want to rename assembly files based on directory name
#to rename each file after the name of directory:

for p in */assembly.fasta; do [ -f "$p" ] && mv -i "$p" "${p%/*}/${p/\//.}"; done
cp */*.fasta /home/storage/finished_projects/Leon/Doktorat/Prekmurje/05plasmids/project_prekmurje_plasmids/01_hybrid_sequences/
